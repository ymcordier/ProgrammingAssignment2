16*16
matrix(1:20, 4, 5)
m1 <- matrix(1:20, 4, 5)
solve(m1)
m1 <- matrix(1:16, 4, 4)
solve(m1)
m1
m1 <- matrix(sample(16), 4, 4)
m1
solve(m1)
source('~/GitHub/ProgrammingAssignment2/cachevector.R')
a <- makeVector(1:50)
cachemean(a)
makeVector(1:50)
a <- makeVector(1:50)
a
m1
a <- makeVector(1:50)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m1)
my_matrix <- makeCacheMatrix(m1)
my_matrix
getmatrix(my_matrix)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
a <- makeVector(1:50)
cachemean(a)
cachemean(a)
m1&set(m1)
m1&setmatrix(m1)
m1
mymatrix
my_matrix
my_matrix$set(m1)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
setwd("C:\Users\yann-marie.cordier\Documents\GitHub\ProgrammingAssignment2")
setwd("C:/Users/yann-marie.cordier/Documents/GitHub/ProgrammingAssignment2")
getwd()
dir()
source('~/GitHub/ProgrammingAssignment2/cachevector.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
a <- matrix(1:4, 2, 2)
b <- makeMatrix(a)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
b <- makeMatrix(a)
b
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
b <- makeMatrix(a)
b
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(b)
cacheSolve(b)
c <- matrix(runif(25, 1, 50), 5, 5)
d <- makeCacheMatrix(c)
cacheSolve(d)
d <- makematrix(c)
d <- makeMatrix(c)
cacheSolve(d)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <- matrix(runif(25, 1, 50), 5, 5)
d <- makeMatrix(c)
cacheMatrix(d)
cacheMatrix(d)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <- matrix(runif(25, 1, 50), 5, 5)
c <- makeCacheMatrix(runif(25, 1, 50), 5, 5)
c <- makeCacheMatrix(runif(25, 1, 50), 5, 5)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <- makeCacheMatrix(runif(25, 1, 50), 5, 5)
c <- makeCacheMatrix(1:4, 5, 5)
c <- makeCacheMatrix(1:4, 2,2)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <- matrix(runif(25, 1, 50), 5, 5)
d <- makeCacheMatrix(c)
d
cacheSolve(d)
cacheSolve(d)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <- matrix(runif(25, 1, 50), 5, 5)
d <- makeCacheMatrix(c)
cacheSolve(d)
cacheSolve(d)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <- makeCacheMatrix(runif(25, 1, 50), 5, 5)
c <- Matrix(runif(25, 1, 50), 5, 5)
c <- matrix(runif(25, 1, 50), 5, 5)
d <- makeCacheMatrix(c)
cacheSolve(d)
cacheSolve(d)
a <- matrix(1:4, 2, 2)
b <- makeCacheMatrix(a)
cacheSolve(b)
solve(a)
cacheSolve(b)
a <- matrix(sample(16), 4, 4)
a
b <- makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
e <- matrix(sample(16*16), 16, 16)
e
makeCacheMatrix(e)
f <- makeCacheMatrix(e)
f
cacheSolve(f)
cacheSolve(f)
e <- matrix(sample(160, 160), 160, 160)
f <- makeCacheMatrix(e)
cacheSolve(f)
16*16
e <- matrix(sample(256), 256, 256)
f <- makeCacheMatrix(e)
cacheSolve(f)
e <- matrix(sample(160*160), 160, 160)
f <- makeCacheMatrix(e)
cacheSolve(f)
cacheSolve(f)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
